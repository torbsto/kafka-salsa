/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.hpi.msd.salsa.serde.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Edge extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1255206237111010344L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Edge\",\"namespace\":\"de.hpi.msd.salsa.serde.avro\",\"fields\":[{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"tweedId\",\"type\":\"long\"},{\"name\":\"edgeType\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Edge> ENCODER =
      new BinaryMessageEncoder<Edge>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Edge> DECODER =
      new BinaryMessageDecoder<Edge>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Edge> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Edge> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Edge>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Edge to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Edge from a ByteBuffer. */
  public static Edge fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long userId;
  @Deprecated public long tweedId;
  @Deprecated public int edgeType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Edge() {}

  /**
   * All-args constructor.
   * @param userId The new value for userId
   * @param tweedId The new value for tweedId
   * @param edgeType The new value for edgeType
   */
  public Edge(java.lang.Long userId, java.lang.Long tweedId, java.lang.Integer edgeType) {
    this.userId = userId;
    this.tweedId = tweedId;
    this.edgeType = edgeType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return tweedId;
    case 2: return edgeType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.Long)value$; break;
    case 1: tweedId = (java.lang.Long)value$; break;
    case 2: edgeType = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'tweedId' field.
   * @return The value of the 'tweedId' field.
   */
  public java.lang.Long getTweedId() {
    return tweedId;
  }

  /**
   * Sets the value of the 'tweedId' field.
   * @param value the value to set.
   */
  public void setTweedId(java.lang.Long value) {
    this.tweedId = value;
  }

  /**
   * Gets the value of the 'edgeType' field.
   * @return The value of the 'edgeType' field.
   */
  public java.lang.Integer getEdgeType() {
    return edgeType;
  }

  /**
   * Sets the value of the 'edgeType' field.
   * @param value the value to set.
   */
  public void setEdgeType(java.lang.Integer value) {
    this.edgeType = value;
  }

  /**
   * Creates a new Edge RecordBuilder.
   * @return A new Edge RecordBuilder
   */
  public static de.hpi.msd.salsa.serde.avro.Edge.Builder newBuilder() {
    return new de.hpi.msd.salsa.serde.avro.Edge.Builder();
  }

  /**
   * Creates a new Edge RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Edge RecordBuilder
   */
  public static de.hpi.msd.salsa.serde.avro.Edge.Builder newBuilder(de.hpi.msd.salsa.serde.avro.Edge.Builder other) {
    return new de.hpi.msd.salsa.serde.avro.Edge.Builder(other);
  }

  /**
   * Creates a new Edge RecordBuilder by copying an existing Edge instance.
   * @param other The existing instance to copy.
   * @return A new Edge RecordBuilder
   */
  public static de.hpi.msd.salsa.serde.avro.Edge.Builder newBuilder(de.hpi.msd.salsa.serde.avro.Edge other) {
    return new de.hpi.msd.salsa.serde.avro.Edge.Builder(other);
  }

  /**
   * RecordBuilder for Edge instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Edge>
    implements org.apache.avro.data.RecordBuilder<Edge> {

    private long userId;
    private long tweedId;
    private int edgeType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.hpi.msd.salsa.serde.avro.Edge.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tweedId)) {
        this.tweedId = data().deepCopy(fields()[1].schema(), other.tweedId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.edgeType)) {
        this.edgeType = data().deepCopy(fields()[2].schema(), other.edgeType);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Edge instance
     * @param other The existing instance to copy.
     */
    private Builder(de.hpi.msd.salsa.serde.avro.Edge other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tweedId)) {
        this.tweedId = data().deepCopy(fields()[1].schema(), other.tweedId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.edgeType)) {
        this.edgeType = data().deepCopy(fields()[2].schema(), other.edgeType);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder setUserId(long value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder clearUserId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tweedId' field.
      * @return The value.
      */
    public java.lang.Long getTweedId() {
      return tweedId;
    }

    /**
      * Sets the value of the 'tweedId' field.
      * @param value The value of 'tweedId'.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder setTweedId(long value) {
      validate(fields()[1], value);
      this.tweedId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tweedId' field has been set.
      * @return True if the 'tweedId' field has been set, false otherwise.
      */
    public boolean hasTweedId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tweedId' field.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder clearTweedId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'edgeType' field.
      * @return The value.
      */
    public java.lang.Integer getEdgeType() {
      return edgeType;
    }

    /**
      * Sets the value of the 'edgeType' field.
      * @param value The value of 'edgeType'.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder setEdgeType(int value) {
      validate(fields()[2], value);
      this.edgeType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'edgeType' field has been set.
      * @return True if the 'edgeType' field has been set, false otherwise.
      */
    public boolean hasEdgeType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'edgeType' field.
      * @return This builder.
      */
    public de.hpi.msd.salsa.serde.avro.Edge.Builder clearEdgeType() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Edge build() {
      try {
        Edge record = new Edge();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.Long) defaultValue(fields()[0]);
        record.tweedId = fieldSetFlags()[1] ? this.tweedId : (java.lang.Long) defaultValue(fields()[1]);
        record.edgeType = fieldSetFlags()[2] ? this.edgeType : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Edge>
    WRITER$ = (org.apache.avro.io.DatumWriter<Edge>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Edge>
    READER$ = (org.apache.avro.io.DatumReader<Edge>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
